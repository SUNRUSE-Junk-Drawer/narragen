swagger: "2.0"
info:
  title: PGRTSPM
  description: Procedural Generation through Recursive Triple-Store Pattern Matching
  version: "0.0.0"
basePath: /api
definitions:
  attributeBody:
    type: object
    additionalProperties: false
    required: [name, defaultValueGlobalId]
    properties:
      name:
        description: The user-given name of this attribute.
        type: string
        pattern: /^\S$|^\S.*\S$/
        maxLength: 50
      defaultValueGlobalId:
        description: The id of the global variable to use as a default value for this attribute.
        type: string
        format: uuid
  400schema:
    type: object
    additionalProperties: false
    required: [code]
    properties:
      code:
        description: A code describing why the request could not be processed.
        type: string
        enum: [invalidJson, required, tooShort, tooLong, invalidText, notRecognized, deleted]
      path:
        description: When the error concerns a specific field, the JavaScript-style path to that field, i.e. items[0].name.
        type: string
paths:
  /rulesets:
    post:
      description: Creates a new, empty ruleset.
      parameters:
      - name: body
        in: body
        description: The header information to use in the new ruleset.
        schema:
          type: object
          additionalProperties: false
          required: [name, description]
          properties:
            name:
              description: The user-given name of this ruleset.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            description:
              description: The user-given description of this ruleset, if any.
              type: string
              pattern: /^$|^\S$|^\S.*\S$/
              maxLength: 250
      responses:
        200:
          description: A ruleset has been successfully created.
          schema:
            type: object
            additionalProperties: false
            required: [rulesetId]
            properties:
              rulesetId:
                description: The unique identifier of the created ruleset.
                type: string
                format: uuid
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
  /rulesets/{rulesetId}:
    get:
      description: Retrieves a previously created ruleset.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset to retrieve.
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: The ruleset has been successfully retrieved.
          schema:
            type: object
            additionalProperties: false
            required: [name, description, attributes, globals, rules, instances]
            properties:
              name:
                description: The user-given name of this ruleset.
                type: string
                pattern: /^\S$|^\S.*\S$/
                maxLength: 50
              description:
                description: The user-given description of this ruleset, if any.
                type: string
                pattern: /^$|^\S$|^\S.*\S$/
                maxLength: 250
              attributes:
                description: A list of the attributes in this ruleset.
                type: array
                items:
                  description: An attribute in this ruleset.
                  type: object
                  additionalProperties: false
                  required: [attributeId, name]
                  properties:
                    attributeId:
                      description: The unique identifier of this attribute.
                      type: string
                      format: uuid
                    name:
                      description: The user-given name of this attribute.
                      type: string
                      pattern: /^\S$|^\S.*\S$/
                      maxLength: 50
              globals:
                description: A list of the global variables in this ruleset.
                type: array
                items:
                  description: A global variable in this ruleset.
                  type: object
                  additionalProperties: false
                  required: [globalId, name]
                  properties:
                    globalId:
                      description: The unique identifier of this global variable.
                      type: string
                      format: uuid
                    name:
                      description: The user-given name of this global variable.
                      type: string
                      pattern: /^\S$|^\S.*\S$/
                      maxLength: 50
              rules:
                description: A list of the rules in this ruleset.
                type: array
                items:
                  description: A rule in this ruleset.
                  type: object
                  additionalProperties: false
                  required: [ruleId, name, description]
                  properties:
                    ruleId:
                      type: string
                      format: uuid
                    name:
                      description: The unique identifier of this rule.
                      type: string
                      format: uuid
                    description:
                      description: The user-given name of this rule.
                      type: string
                      pattern: /^$|^\S$|^\S.*\S$/
                      maxLength: 50
              instances:
                type: string
        404:
          description: rulesetId was not recognized.
        410:
          description: The ruleset specified has been deleted.
    put:
      description: Updates the header information of a previously created ruleset.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset to update.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The header information to use to update.
        schema:
          type: object
          additionalProperties: false
          required: [name, description]
          properties:
            name:
              description: The user-given name of this ruleset.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            description:
              description: The user-given description of this ruleset, if any.
              type: string
              pattern: /^$|^\S$|^\S.*\S$/
              maxLength: 250
      responses:
        204:
          description: The header information for this ruleset has been successfully updated.
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId was not recognized.
        410:
          description: The ruleset specified has been deleted.
    delete:
      description: Deletes a previously created ruleset.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset to delete.
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: The ruleset has been successfully deleted.
        404:
          description: rulesetId was not recognized.
  /rulesets/{rulesetId}/attributes:
    post:
      description: Creates a new attribute in a previously created ruleset.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset to create an attribute inside.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use in the new attribute.
        schema:
          $ref: "#/definitions/attributeBody"
      responses:
        200:
          description: An attribute has been successfully created.
          schema:
            type: object
            additionalProperties: false
            required: [attributeId]
            properties:
              attributeId:
                description: The unique identifier of the created attribute.
                type: string
                format: uuid
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId was not recognized.
        410:
          description: The ruleset specified has been deleted.
  /rulesets/{rulesetId}/attributes/{attributeId}:
    put:
      description: Updates a previously created attribute.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the attribute is from.
        required: true
        type: string
        format: uuid
      - name: attributeId
        in: path
        description: The id of the attribute to update.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use to update the attribute.
        schema:
          $ref: "#/definitions/attributeBody"
      responses:
        204:
          description: The attribute has been successfully updated.
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId or attributeId was not recognized.
        410:
          description: The ruleset or attribute specified has been deleted.
    delete:
      description: Deletes a previously created attribute.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the attribute is from.
        required: true
        type: string
        format: uuid
      - name: attributeId
        in: path
        description: The id of the attribute to delete.
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: The attribute has been successfully deleted.
        404:
          description: rulesetId or attributeId was not recognized.
  /rulesets/{rulesetId}/globals:
    post:
      description: Creates a new global variable in a previously created ruleset.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset to create a global variable inside.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use in the new global variable.
        schema:
          type: object
          additionalProperties: false
          required: [name, initialValues]
          properties:
            name:
              description: The user-given name of this global variable.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            initialValues:
              description: The initial values of the attributes of this global variable.
              type: array
              items:
                type: object
                additionalProperties: false
                required: [attributeId, valueGlobalId]
                properties:
                  attributeId:
                    description: The id of the attribute to define an initial value of for this global variable.
                    type: string
                    format: uuid
                  valueGlobalId:
                    description: The id of the global variable to assign this attribute to for this global variable.
                    type: string
                    format: uuid
      responses:
        200:
          description: A global variable has been successfully created.
          schema:
            type: object
            additionalProperties: false
            required: [globalId]
            properties:
              globalId:
                description: The unique identifier of the created global variable.
                type: string
                format: uuid
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId was not recognized.
        410:
          description: The ruleset specified has been deleted.
  /rulesets/{rulesetId}/globals/{globalId}:
    put:
      description: Updates a previously created global variable.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the global variable is from.
        required: true
        type: string
        format: uuid
      - name: globalId
        in: path
        description: The id of the global variable to update.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use to update the global variable.
        schema:
          type: object
          additionalProperties: false
          required: [name, initialValues]
          properties:
            name:
              description: The user-given name of this global variable.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            initialValues:
              description: The initial values of the attributes of this global variable.
              type: array
              items:
                type: object
                additionalProperties: false
                required: [attributeId, valueGlobalId]
                properties:
                  attributeId:
                    description: The id of the attribute to define an initial value of for this global variable.
                    type: string
                    format: uuid
                  valueGlobalId:
                    description: The id of the global variable to assign this attribute to for this global variable.
                    type: string
                    format: uuid
      responses:
        204:
          description: The global variable has been successfully updated.
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId or globalId was not recognized.
        410:
          description: The ruleset or global variable specified has been deleted.
    delete:
      description: Deletes a previously created global variable.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the global variable is from.
        required: true
        type: string
        format: uuid
      - name: globalId
        in: path
        description: The id of the global variable to delete.
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: The global variable has been successfully deleted.
        404:
          description: rulesetId or globalId was not recognized.
  /rulesets/{rulesetId}/rules:
    post:
      description: Creates a new rule in a previously created ruleset.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset to create a rule inside.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The header information to use in the new rule.
        schema:
          type: object
          additionalProperties: false
          required: [name]
          properties:
            name:
              description: The user-given name of this rule.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            description:
              description: The user-given description of this rule, if any.
              type: string
              pattern: /^$|^\S$|^\S.*\S$/
              maxLength: 250
      responses:
        200:
          description: A rule has been successfully created.
          schema:
            type: object
            additionalProperties: false
            required: [ruleId]
            properties:
              ruleId:
                description: The unique identifier of the created rule.
                type: string
                format: uuid
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId was not recognized.
        410:
          description: The ruleset specified has been deleted.
  /rulesets/{rulesetId}/rules/{ruleId}:
    get:
      description: Retrieves a previously created rule.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule to retrieve.
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: The rule has been successfully retrieved.
          schema:
            type: object
            additionalProperties: false
            required: [name, description, existing, match, create]
            properties:
              name:
                description: The user-given name of this rule.
                type: string
                pattern: /^\S$|^\S.*\S$/
                maxLength: 50
              description:
                description: The user-given description of this rule, if any.
                type: string
                pattern: /^$|^\S$|^\S.*\S$/
                maxLength: 250
              existing:
                description: An array of variables which refer to existing entities.
                type: array
                items:
                  description: A variable which refers to an existing entity.
                  type: object
                  additionalProperties: false
                  required: [existingId, name, set]
                  properties: 
                    existingId:
                      description: The unique identifier of this variable.
                      type: string
                      format: uuid
                    name:
                      description: The user-given name of this variable.
                      type: string
                      pattern: /^\S$|^\S.*\S$/
                      maxLength: 50
                    set:
                      description: An array of the attributes to change when this rule runs, and what to change them to.
                      type: array
                      items:
                        description: An attribute to change when this rule runs.
                        type: object
                        additionalProperties: false
                        required: [attributeId, valueGlobalIdExistingIdOrCreateId]
                        properties:
                          attributeId:
                            description: The id of the attribute to change when this rule runs.
                            type: string
                            format: uuid
                          valueGlobalIdExistingIdOrCreateId:
                            description: The id of the global variable or existing or created entity from this rule to assign this attribute to when this rule runs.
                            type: string
                            format: uuid
              match:
                description: An array of in/equality tests which must pass for the rule to run.
                type: array
                items:
                  description: An in/equality test which must pass for the rule to run.
                  type: object
                  additionalProperties: false
                  required: [matchId, globalIdOrExistingId, attributeChain, operator, operandGlobalIdOrExistingId]
                  properties: 
                    matchId:
                      description: The unique identifier of this test.
                      type: string
                      format: uuid
                    globalIdOrExistingId:
                      description: The id of the global variable or existing entity from this rule which attributeChain starts from.
                      type: string
                      format: uuid
                    attributeChain:
                      description: An array of attribute ids which are followed from globalIdOrExistingId to find the left operand entity of the comparison.
                      type: array
                      items:
                        type: string
                        format: uuid
                    operator:
                      description: The comparison to make.
                      type: string
                      enum: [is, isNot]
                    operandGlobalIdOrExistingId:
                      description: The id of the global variable or existing entity from this rule which is the right operand entity of the comparison.
                      type: string
                      format: uuid
              create:
                description: An array of entities which are created when this rule runs.
                type: array
                items:
                  description: An entity which is created when this rule runs.
                  type: object
                  additionalProperties: false
                  required: [createId, name, set]
                  properties: 
                    createId:
                      description: The unique identifier of this entity to create.
                      type: string
                      format: uuid
                    name:
                      description: The user-given name of this entity to create.
                      type: string
                      pattern: /^\S$|^\S.*\S$/
                      maxLength: 50
                    set:
                      description: An array of the initial attribute/value pairs to set when creating this entity.
                      type: array
                      items:
                        description: An attribute/value pair to set when creating this entity.
                        type: object
                        additionalProperties: false
                        required: [attributeId, valueGlobalIdExistingIdOrCreateId]
                        properties:
                          attributeId:
                            description: The id of the attribute to set when this entity is created.
                            type: string
                            format: uuid
                          valueGlobalIdExistingIdOrCreateId:
                            description: The id of the global variable or existing or created entity from this rule to assign this attribute to when this entity is created.
                            type: string
                            format: uuid
        404:
          description: rulesetId or ruleId was not recognized.
        410:
          description: The ruleset or rule specified has been deleted.
    put:
      description: Updates the header information of a previously created rule.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule to update.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The header information to use to update the rule.
        schema:
          type: object
          additionalProperties: false
          required: [name, description]
          properties:
            name:
              description: The user-given name of this rule.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            description:
              description: The user-given description of this rule, if any.
              type: string
              pattern: /^$|^\S$|^\S.*\S$/
              maxLength: 250
      responses:
        204:
          description: The header information for this rule has been successfully updated.
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId or ruleId was not recognized.
        410:
          description: The ruleset or rule specified has been deleted.
    delete:
      description: Deletes a previously created rule.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule to delete.
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: The rule has been successfully deleted.
        404:
          description: rulesetId or ruleId was not recognized.
  /rulesets/{rulesetId}/rules/{ruleId}/existing:
    post:
      description: Creates a new existing variable in a previously created rule.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule to create a new existing variable inside.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use in the new existing variable.
        schema:
          type: object
          additionalProperties: false
          required: [name, set]
          properties: 
            name:
              description: The user-given name of this existing variable.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            set:
              description: An array of the attributes to change when this rule runs, and what to change them to.
              type: array
              items:
                description: An attribute to change when this rule runs.
                type: object
                additionalProperties: false
                required: [attributeId, valueGlobalIdExistingIdOrCreateId]
                properties:
                  attributeId:
                    description: The id of the attribute to change when this rule runs.
                    type: string
                    format: uuid
                  valueGlobalIdExistingIdOrCreateId:
                    description: The id of the global variable or existing or created entity from this rule to assign this attribute to when this rule runs.
                    type: string
                    format: uuid
      responses:
        200:
          description: A new existing variable has been successfully created.
          schema:
            type: object
            additionalProperties: false
            required: [existingId]
            properties:
              existingId:
                description: The unique identifier of the created existing variable.
                type: string
                format: uuid
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId or ruleId was not recognized.
        410:
          description: The ruleset or rule specified has been deleted.
  /rulesets/{rulesetId}/rules/{ruleId}/existing/{existingId}:
    put:
      description: Updates a previously created existing variable.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule the existing variable is from.
        required: true
        type: string
        format: uuid
      - name: existingId
        in: path
        description: The id of the existing variable to update.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use to update the existing variable.
        schema:
          type: object
          additionalProperties: false
          required: [name, set]
          properties: 
            name:
              description: The user-given name of this existing variable.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            set:
              description: An array of the attributes to change when this rule runs, and what to change them to.
              type: array
              items:
                description: An attribute to change when this rule runs.
                type: object
                additionalProperties: false
                required: [attributeId, valueGlobalIdExistingIdOrCreateId]
                properties:
                  attributeId:
                    description: The id of the attribute to change when this rule runs.
                    type: string
                    format: uuid
                  valueGlobalIdExistingIdOrCreateId:
                    description: The id of the global variable or existing or created entity from this rule to assign this attribute to when this rule runs.
                    type: string
                    format: uuid
      responses:
        204:
          description: The existing variable has been successfully updated.
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId, ruleId or existingId was not recognized.
        410:
          description: The ruleset, rule or existing variable specified has been deleted.
    delete:
      description: Deletes a previously created existing variable.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule the existing variable is from.
        required: true
        type: string
        format: uuid
      - name: existingId
        in: path
        description: The id of the existing variable to delete.
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: The existing variable has been successfully deleted.
        404:
          description: rulesetId, ruleId or existingId was not recognized.
  /rulesets/{rulesetId}/rules/{ruleId}/matches:
    post:
      description: Creates a new match in a previously created rule.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule to update.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use in the new match.
        schema:
          type: object
          additionalProperties: false
          required: [matchId, globalIdOrExistingId, attributeChain, operator, operandGlobalIdOrExistingId]
          properties: 
            matchId:
              description: The unique identifier of this test.
              type: string
              format: uuid
            globalIdOrExistingId:
              description: The id of the global variable or existing entity from this rule which attributeChain starts from.
              type: string
              format: uuid
            attributeChain:
              description: An array of attribute ids which are followed from globalIdOrExistingId to find the left operand entity of the comparison.
              type: array
              items:
                type: string
                format: uuid
            operator:
              description: The comparison to make.
              type: string
              enum: [is, isNot]
            operandGlobalIdOrExistingId:
              description: The id of the global variable or existing entity from this rule which is the right operand entity of the comparison.
              type: string
              format: uuid
      responses:
        200:
          description: A new match has been successfully created.
          schema:
            type: object
            additionalProperties: false
            required: [existingId]
            properties:
              existingId:
                description: The unique identifier of the created match.
                type: string
                format: uuid
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId or ruleId was not recognized.
        410:
          description: The ruleset or rule specified has been deleted.
  /rulesets/{rulesetId}/rules/{ruleId}/matches/{matchId}:
    put:
      description: Updates a previously created match.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule the match is from.
        required: true
        type: string
        format: uuid
      - name: matchId
        in: path
        description: The id of the match to update.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use to update the match.
        schema:
          type: object
          additionalProperties: false
          required: [matchId, globalIdOrExistingId, attributeChain, operator, operandGlobalIdOrExistingId]
          properties: 
            matchId:
              description: The unique identifier of this test.
              type: string
              format: uuid
            globalIdOrExistingId:
              description: The id of the global variable or existing entity from this rule which attributeChain starts from.
              type: string
              format: uuid
            attributeChain:
              description: An array of attribute ids which are followed from globalIdOrExistingId to find the left operand entity of the comparison.
              type: array
              items:
                type: string
                format: uuid
            operator:
              description: The comparison to make.
              type: string
              enum: [is, isNot]
            operandGlobalIdOrExistingId:
              description: The id of the global variable or existing entity from this rule which is the right operand entity of the comparison.
              type: string
              format: uuid
      responses:
        204:
          description: The existing variable has been successfully updated.
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId, ruleId or matchId was not recognized.
        410:
          description: The ruleset, rule or match specified has been deleted.
    delete:
      description: Deletes a previously created match.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule the match is from.
        required: true
        type: string
        format: uuid
      - name: matchId
        in: path
        description: The id of the match to delete.
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: The match has been successfully deleted.
        404:
          description: rulesetId, ruleId or matchId was not recognized.
  /rulesets/{rulesetId}/rules/{ruleId}/creates:
    post:
      description: Creates a new create variable in a previously created rule.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule to create a new create variable inside.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use in the new create variable.
        schema: 
          type: object
          additionalProperties: false
          required: [name, set]
          properties: 
            name:
              description: The user-given name of this entity to create.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            set:
              description: An array of the initial attribute/value pairs to set when creating this entity.
              type: array
              items:
                description: An attribute/value pair to set when creating this entity.
                type: object
                additionalProperties: false
                required: [attributeId, valueGlobalIdExistingIdOrCreateId]
                properties:
                  attributeId:
                    description: The id of the attribute to set when this entity is created.
                    type: string
                    format: uuid
                  valueGlobalIdExistingIdOrCreateId:
                    description: The id of the global variable or existing or created entity from this rule to assign this attribute to when this entity is created.
                    type: string
                    format: uuid
      responses:
        200:
          description: A new create variable has been successfully created.
          schema:
            type: object
            additionalProperties: false
            required: [createId]
            properties:
              createId:
                description: The unique identifier of the created create variable.
                type: string
                format: uuid
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId or ruleId was not recognized.
        410:
          description: The ruleset or rule specified has been deleted.
  /rulesets/{rulesetId}/rules/{ruleId}/creates/{createId}:
    put:
      description: Updates a previously created create variable.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule the create variable is from.
        required: true
        type: string
        format: uuid
      - name: createId
        in: path
        description: The id of the create variable to update.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The information to use to update the create variable.
        schema:
          type: object
          additionalProperties: false
          required: [name, set]
          properties: 
            name:
              description: The user-given name of this entity to create.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
            set:
              description: An array of the initial attribute/value pairs to set when creating this entity.
              type: array
              items:
                description: An attribute/value pair to set when creating this entity.
                type: object
                additionalProperties: false
                required: [attributeId, valueGlobalIdExistingIdOrCreateId]
                properties:
                  attributeId:
                    description: The id of the attribute to set when this entity is created.
                    type: string
                    format: uuid
                  valueGlobalIdExistingIdOrCreateId:
                    description: The id of the global variable or existing or created entity from this rule to assign this attribute to when this entity is created.
                    type: string
                    format: uuid
      responses:
        204:
          description: The create variable has been successfully updated.
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId, ruleId or createId was not recognized.
        410:
          description: The ruleset, rule or create variable specified has been deleted.
    delete:
      description: Deletes a previously created create variable.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the rule is from.
        required: true
        type: string
        format: uuid
      - name: ruleId
        in: path
        description: The id of the rule the create variable is from.
        required: true
        type: string
        format: uuid
      - name: createId
        in: path
        description: The id of the create variable to delete.
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: The create variable has been successfully deleted.
        404:
          description: rulesetId, ruleId or createId was not recognized.
  /rulesets/{rulesetId}/instances:
    post:
      description: Creates a new instance in a previously created ruleset.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset to create an instance inside.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The header information to use in the new instance.
        schema:
          type: object
          additionalProperties: false
          required: [name]
          properties:
            name:
              description: The user-given name of this instance.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
      responses:
        200:
          description: A instance has been successfully created.
          schema:
            type: object
            additionalProperties: false
            required: [instanceId]
            properties:
              instanceId:
                description: The unique identifier of the created instance.
                type: string
                format: uuid
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId was not recognized.
        410:
          description: The ruleset specified has been deleted.
  /rulesets/{rulesetId}/instances/{instanceId}:
    get:
      description: Retrieves the header information and current state of a previously created instance.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the instance is from.
        required: true
        type: string
        format: uuid
      - name: instanceId
        in: path
        description: The id of the instance to retrieve.
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: The instance has been successfully retrieved.
          schema:
            type: object
            additionalProperties: false
            required: [name, entities]
            properties:
              name:
                description: The user-given name of this instance.
                type: string
                pattern: /^\S$|^\S.*\S$/
                maxLength: 50
              entities:
                description: The current state of this instance.
                type: array
                items:
                  type: object
                  additionalProperties: false
                  required: [entityId, name, attributeValues]
                  properties:
                    entityId:
                      description: The unique identifier of this entity.  This may be a GlobalId, or an unique identifier for an entity created by a rule.
                      type: string
                      format: uuid
                    name:
                      description: The name of this entity.  If it was created by a rule, this will be of the format {Rule Name}.{Create Name}.
                      type: string
                    attributeValues:
                      description: The values of the attributes held by this entity.
                      type: array
                      items:
                        type: object
                        additionalProperties: false
                        required: [attributeId, valueEntityId]
                        properties:
                          attributeId:
                            description: The AttributeId set.
                            type: string
                            format: uuid
                          valueEntityId:
                            description: The value of this attribute for this entity.  This may be a GlobalId, or an unique identifier for an entity created by a rule.
                            type: string
                            format: uuid
        404:
          description: rulesetId or instanceId was not recognized.
        410:
          description: The ruleset or instance specified has been deleted.
    put:
      description: Updates the header information of a previously created instance.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the instance is from.
        required: true
        type: string
        format: uuid
      - name: instanceId
        in: path
        description: The id of the instance to update.
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        description: The header information to use to update the instance.
        schema:
          type: object
          additionalProperties: false
          required: [name]
          properties:
            name:
              description: The user-given name of this instance.
              type: string
              pattern: /^\S$|^\S.*\S$/
              maxLength: 50
      responses:
        204:
          description: The header information for this instance has been successfully updated.
        400:
          description: The request is not valid.
          schema:
            $ref: "#/definitions/400schema"
        404:
          description: rulesetId or instanceId was not recognized.
        410:
          description: The ruleset or instance specified has been deleted.
    delete:
      description: Deletes a previously created instance.
      parameters:
      - name: rulesetId
        in: path
        description: The id of the ruleset the instance is from.
        required: true
        type: string
        format: uuid
      - name: instanceId
        in: path
        description: The id of the instance to delete.
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: The instance has been successfully deleted.
        404:
          description: rulesetId or instanceId was not recognized.